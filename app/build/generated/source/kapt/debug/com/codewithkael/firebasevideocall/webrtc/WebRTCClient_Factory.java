// Generated by Dagger (https://dagger.dev).
package com.codewithkael.firebasevideocall.webrtc;

import android.content.Context;
import com.google.gson.Gson;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WebRTCClient_Factory implements Factory<WebRTCClient> {
  private final Provider<Context> contextProvider;

  private final Provider<Gson> gsonProvider;

  public WebRTCClient_Factory(Provider<Context> contextProvider, Provider<Gson> gsonProvider) {
    this.contextProvider = contextProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public WebRTCClient get() {
    return newInstance(contextProvider.get(), gsonProvider.get());
  }

  public static WebRTCClient_Factory create(Provider<Context> contextProvider,
      Provider<Gson> gsonProvider) {
    return new WebRTCClient_Factory(contextProvider, gsonProvider);
  }

  public static WebRTCClient newInstance(Context context, Gson gson) {
    return new WebRTCClient(context, gson);
  }
}
