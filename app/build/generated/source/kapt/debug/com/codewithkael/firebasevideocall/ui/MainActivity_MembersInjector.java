// Generated by Dagger (https://dagger.dev).
package com.codewithkael.firebasevideocall.ui;

import com.codewithkael.firebasevideocall.repository.MainRepository;
import com.codewithkael.firebasevideocall.service.MainServiceRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<MainRepository> mainRepositoryProvider;

  private final Provider<MainServiceRepository> mainServiceRepositoryProvider;

  public MainActivity_MembersInjector(Provider<MainRepository> mainRepositoryProvider,
      Provider<MainServiceRepository> mainServiceRepositoryProvider) {
    this.mainRepositoryProvider = mainRepositoryProvider;
    this.mainServiceRepositoryProvider = mainServiceRepositoryProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<MainRepository> mainRepositoryProvider,
      Provider<MainServiceRepository> mainServiceRepositoryProvider) {
    return new MainActivity_MembersInjector(mainRepositoryProvider, mainServiceRepositoryProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectMainRepository(instance, mainRepositoryProvider.get());
    injectMainServiceRepository(instance, mainServiceRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.codewithkael.firebasevideocall.ui.MainActivity.mainRepository")
  public static void injectMainRepository(MainActivity instance, MainRepository mainRepository) {
    instance.mainRepository = mainRepository;
  }

  @InjectedFieldSignature("com.codewithkael.firebasevideocall.ui.MainActivity.mainServiceRepository")
  public static void injectMainServiceRepository(MainActivity instance,
      MainServiceRepository mainServiceRepository) {
    instance.mainServiceRepository = mainServiceRepository;
  }
}
