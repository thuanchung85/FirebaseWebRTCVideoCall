// Generated by Dagger (https://dagger.dev).
package com.codewithkael.firebasevideocall.ui;

import com.codewithkael.firebasevideocall.repository.MainRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginActivity_MembersInjector implements MembersInjector<LoginActivity> {
  private final Provider<MainRepository> mainRepositoryProvider;

  public LoginActivity_MembersInjector(Provider<MainRepository> mainRepositoryProvider) {
    this.mainRepositoryProvider = mainRepositoryProvider;
  }

  public static MembersInjector<LoginActivity> create(
      Provider<MainRepository> mainRepositoryProvider) {
    return new LoginActivity_MembersInjector(mainRepositoryProvider);
  }

  @Override
  public void injectMembers(LoginActivity instance) {
    injectMainRepository(instance, mainRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.codewithkael.firebasevideocall.ui.LoginActivity.mainRepository")
  public static void injectMainRepository(LoginActivity instance, MainRepository mainRepository) {
    instance.mainRepository = mainRepository;
  }
}
