// Generated by Dagger (https://dagger.dev).
package com.codewithkael.firebasevideocall.ui;

import com.codewithkael.firebasevideocall.service.MainServiceRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CallActivity_MembersInjector implements MembersInjector<CallActivity> {
  private final Provider<MainServiceRepository> serviceRepositoryProvider;

  public CallActivity_MembersInjector(Provider<MainServiceRepository> serviceRepositoryProvider) {
    this.serviceRepositoryProvider = serviceRepositoryProvider;
  }

  public static MembersInjector<CallActivity> create(
      Provider<MainServiceRepository> serviceRepositoryProvider) {
    return new CallActivity_MembersInjector(serviceRepositoryProvider);
  }

  @Override
  public void injectMembers(CallActivity instance) {
    injectServiceRepository(instance, serviceRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.codewithkael.firebasevideocall.ui.CallActivity.serviceRepository")
  public static void injectServiceRepository(CallActivity instance,
      MainServiceRepository serviceRepository) {
    instance.serviceRepository = serviceRepository;
  }
}
