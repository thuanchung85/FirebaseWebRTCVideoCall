// Generated by Dagger (https://dagger.dev).
package com.codewithkael.firebasevideocall.utils;

import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideDatabaseReferenceFactory implements Factory<DatabaseReference> {
  private final AppModule module;

  private final Provider<FirebaseDatabase> dbProvider;

  public AppModule_ProvideDatabaseReferenceFactory(AppModule module,
      Provider<FirebaseDatabase> dbProvider) {
    this.module = module;
    this.dbProvider = dbProvider;
  }

  @Override
  public DatabaseReference get() {
    return provideDatabaseReference(module, dbProvider.get());
  }

  public static AppModule_ProvideDatabaseReferenceFactory create(AppModule module,
      Provider<FirebaseDatabase> dbProvider) {
    return new AppModule_ProvideDatabaseReferenceFactory(module, dbProvider);
  }

  public static DatabaseReference provideDatabaseReference(AppModule instance,
      FirebaseDatabase db) {
    return Preconditions.checkNotNullFromProvides(instance.provideDatabaseReference(db));
  }
}
