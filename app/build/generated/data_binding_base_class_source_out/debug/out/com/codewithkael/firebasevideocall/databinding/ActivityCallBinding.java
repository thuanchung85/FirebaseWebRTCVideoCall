// Generated by view binder compiler. Do not edit!
package com.codewithkael.firebasevideocall.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codewithkael.firebasevideocall.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.webrtc.SurfaceViewRenderer;

public final class ActivityCallBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView callTimerTv;

  @NonNull
  public final TextView callTitleTv;

  @NonNull
  public final LinearLayout controlPanelLayout;

  @NonNull
  public final AppCompatImageButton endCallButton;

  @NonNull
  public final SurfaceViewRenderer localView;

  @NonNull
  public final SurfaceViewRenderer remoteView;

  @NonNull
  public final AppCompatImageButton screenShareButton;

  @NonNull
  public final AppCompatImageButton switchCameraButton;

  @NonNull
  public final ConstraintLayout titleLayout;

  @NonNull
  public final AppCompatImageButton toggleAudioDevice;

  @NonNull
  public final AppCompatImageButton toggleCameraButton;

  @NonNull
  public final AppCompatImageButton toggleMicrophoneButton;

  private ActivityCallBinding(@NonNull ConstraintLayout rootView, @NonNull TextView callTimerTv,
      @NonNull TextView callTitleTv, @NonNull LinearLayout controlPanelLayout,
      @NonNull AppCompatImageButton endCallButton, @NonNull SurfaceViewRenderer localView,
      @NonNull SurfaceViewRenderer remoteView, @NonNull AppCompatImageButton screenShareButton,
      @NonNull AppCompatImageButton switchCameraButton, @NonNull ConstraintLayout titleLayout,
      @NonNull AppCompatImageButton toggleAudioDevice,
      @NonNull AppCompatImageButton toggleCameraButton,
      @NonNull AppCompatImageButton toggleMicrophoneButton) {
    this.rootView = rootView;
    this.callTimerTv = callTimerTv;
    this.callTitleTv = callTitleTv;
    this.controlPanelLayout = controlPanelLayout;
    this.endCallButton = endCallButton;
    this.localView = localView;
    this.remoteView = remoteView;
    this.screenShareButton = screenShareButton;
    this.switchCameraButton = switchCameraButton;
    this.titleLayout = titleLayout;
    this.toggleAudioDevice = toggleAudioDevice;
    this.toggleCameraButton = toggleCameraButton;
    this.toggleMicrophoneButton = toggleMicrophoneButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCallBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_call, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCallBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.callTimerTv;
      TextView callTimerTv = ViewBindings.findChildViewById(rootView, id);
      if (callTimerTv == null) {
        break missingId;
      }

      id = R.id.callTitleTv;
      TextView callTitleTv = ViewBindings.findChildViewById(rootView, id);
      if (callTitleTv == null) {
        break missingId;
      }

      id = R.id.controlPanelLayout;
      LinearLayout controlPanelLayout = ViewBindings.findChildViewById(rootView, id);
      if (controlPanelLayout == null) {
        break missingId;
      }

      id = R.id.endCallButton;
      AppCompatImageButton endCallButton = ViewBindings.findChildViewById(rootView, id);
      if (endCallButton == null) {
        break missingId;
      }

      id = R.id.localView;
      SurfaceViewRenderer localView = ViewBindings.findChildViewById(rootView, id);
      if (localView == null) {
        break missingId;
      }

      id = R.id.remoteView;
      SurfaceViewRenderer remoteView = ViewBindings.findChildViewById(rootView, id);
      if (remoteView == null) {
        break missingId;
      }

      id = R.id.screenShareButton;
      AppCompatImageButton screenShareButton = ViewBindings.findChildViewById(rootView, id);
      if (screenShareButton == null) {
        break missingId;
      }

      id = R.id.switchCameraButton;
      AppCompatImageButton switchCameraButton = ViewBindings.findChildViewById(rootView, id);
      if (switchCameraButton == null) {
        break missingId;
      }

      id = R.id.titleLayout;
      ConstraintLayout titleLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleLayout == null) {
        break missingId;
      }

      id = R.id.toggleAudioDevice;
      AppCompatImageButton toggleAudioDevice = ViewBindings.findChildViewById(rootView, id);
      if (toggleAudioDevice == null) {
        break missingId;
      }

      id = R.id.toggleCameraButton;
      AppCompatImageButton toggleCameraButton = ViewBindings.findChildViewById(rootView, id);
      if (toggleCameraButton == null) {
        break missingId;
      }

      id = R.id.toggleMicrophoneButton;
      AppCompatImageButton toggleMicrophoneButton = ViewBindings.findChildViewById(rootView, id);
      if (toggleMicrophoneButton == null) {
        break missingId;
      }

      return new ActivityCallBinding((ConstraintLayout) rootView, callTimerTv, callTitleTv,
          controlPanelLayout, endCallButton, localView, remoteView, screenShareButton,
          switchCameraButton, titleLayout, toggleAudioDevice, toggleCameraButton,
          toggleMicrophoneButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
