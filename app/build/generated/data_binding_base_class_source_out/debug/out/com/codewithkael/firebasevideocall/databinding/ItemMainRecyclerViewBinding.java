// Generated by view binder compiler. Do not edit!
package com.codewithkael.firebasevideocall.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codewithkael.firebasevideocall.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMainRecyclerViewBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView audioCallBtn;

  @NonNull
  public final ImageView profileImageView;

  @NonNull
  public final TextView statusTv;

  @NonNull
  public final TextView usernameTv;

  @NonNull
  public final ImageView videoCallBtn;

  private ItemMainRecyclerViewBinding(@NonNull CardView rootView, @NonNull ImageView audioCallBtn,
      @NonNull ImageView profileImageView, @NonNull TextView statusTv, @NonNull TextView usernameTv,
      @NonNull ImageView videoCallBtn) {
    this.rootView = rootView;
    this.audioCallBtn = audioCallBtn;
    this.profileImageView = profileImageView;
    this.statusTv = statusTv;
    this.usernameTv = usernameTv;
    this.videoCallBtn = videoCallBtn;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMainRecyclerViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMainRecyclerViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_main_recycler_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMainRecyclerViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audioCallBtn;
      ImageView audioCallBtn = ViewBindings.findChildViewById(rootView, id);
      if (audioCallBtn == null) {
        break missingId;
      }

      id = R.id.profileImageView;
      ImageView profileImageView = ViewBindings.findChildViewById(rootView, id);
      if (profileImageView == null) {
        break missingId;
      }

      id = R.id.statusTv;
      TextView statusTv = ViewBindings.findChildViewById(rootView, id);
      if (statusTv == null) {
        break missingId;
      }

      id = R.id.usernameTv;
      TextView usernameTv = ViewBindings.findChildViewById(rootView, id);
      if (usernameTv == null) {
        break missingId;
      }

      id = R.id.videoCallBtn;
      ImageView videoCallBtn = ViewBindings.findChildViewById(rootView, id);
      if (videoCallBtn == null) {
        break missingId;
      }

      return new ItemMainRecyclerViewBinding((CardView) rootView, audioCallBtn, profileImageView,
          statusTv, usernameTv, videoCallBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
